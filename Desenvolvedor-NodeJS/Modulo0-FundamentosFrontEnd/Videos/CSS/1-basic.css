/*
Type Selectors
Simple selectors (select elements based on name, id, class)
Combinator selectors (select elements based on a specific relationship between them)
Pseudo-class selectors (select elements based on a certain state)
Pseudo-elements selectors (select and style a part of an element)
Attribute selectors (select elements based on an attribute or attribute value)



*/

/*
*{
    color: darkmagenta;
}*/
body{
  /*background-color: aqua;*/
  opacity: 0.9;
  background-image: url("./img/aguia].png");
  background-repeat: repeat-x repeat-y; /*repeat-x; no-repeat*/
  background-position: left;
  background-attachment: scroll; /*fixed*/
  /*background: rgb(107, 90, 58)  url() no-repeat scroll right top;*/
}

#css{
    /*background-color: aqua;*/
    opacity: 0.9;
    background-image: url("../HTML/img/elefante.jpg");
    background-repeat: no-repeat; /*repeat-x;*/
    background-position: 0%;
    background-attachment: scroll; /*fixed*/
    /*background: rgb(107, 90, 58)  url() no-repeat scroll right top;*/
}

#d1{
    color: blue;
    text-align: left;
    border-style: dashed;
    border-width: 10px 5px 7px 15px; /*top right bottom left       medium thick thin*/
    border-color: red green blue yellow;/* red top, green right, blue bottom and yellow left */
    border-top-style: dashed;
    border-radius: 5px;
}

p.dotted {border-style: dotted;}
p.dashed {border-style: dashed;}
p.solid {border-style: solid;}
p.double {border-style: double;}
p.groove {border-style: groove;}
p.ridge {border-style: ridge;}
p.inset {border-style: inset;}
p.outset {border-style: outset;}
p.none {border-style: none;}
p.hidden {border-style: hidden;}
p.mix {border-style: dotted dashed solid double;}

#personalizacao{
    background-color: rgba(128, 128, 128, 0.24);
    border:rgb(54, 39, 11) solid 1px;
    border-left: solid 3px rgb(231, 13, 13);
    border-radius: 20px;
    margin: 10px 20px 10px; /*top (right-left) botton*/  /*tem tbm o inherit*/
    padding: 50px;
    box-sizing: border-box; /*vai proporcionalizar a largura real desejada*/
    max-width: 500px;
}
/*
width ou height define a larg e alt do content
o elemento tem content, padding, border, margin
largura real =  content +  padding + border + margin
*/

.class1{
    color: rgb(rgb(107, 90, 58), green, blue);
    text-align: right;
}

p.class1{
    background-color: coral;
}

h1, h2, h3{
    color: crimson;
}

#css_s{
    outline-style: dotted ; /*o contorno difere das bordas ! Ao contrário da borda, o contorno é desenhado fora da borda do elemento e pode se sobrepor a outro conteúdo. Além disso, o contorno NÃO faz parte das dimensões do elemento; a largura e a altura totais do elemento não são afetadas pela largura do contorno.*/
    outline-width: 4px; /*thin (typically 1px) medium (typically 3px) thick (typically 5px) A specific size (in px, pt, cm, em, etc)*/
    outline-color:invert;
    outline-offset: 5px;
    /*outline: invert 4px solid;*/
    border: solid black 2px;


    color: black;
    text-align: center;
    background-color: beige;
    direction: rtl;
    vertical-align: text-top;
    
    text-decoration: none; /*overline   line-through    underline*/

    text-transform: uppercase; /*lowercase      capitalize*/

    text-indent: 50px;  /*é usada para especificar o recuo da primeira linha de um texto*/

    letter-spacing: 10px; /*usada para especificar o espaço entre os caracteres em um texto*/

    line-height: 0%;  /*sada para especificar o espaço entre as linhas:*/

    word-spacing: 0%; /*usada para especificar o espaço entre as palavras em um texto*/

    white-space: nowrap; /* especifica como o espaço em branco dentro de um elemento é tratado  (normal, pre)*/

    text-shadow: 2px 2px 4px red; /*horizontal, vertical, desfalque cor;      é a sombra*/

    font-family: 'Courier New', Courier, monospace;

    font-style: normal;

    font-weight: bold; /*peso da fonte*/

    font-size: 4em;/*1em é igual ao tamanho da fonte atual. O tamanho do texto padrão em navegadores é 16px. Portanto, o tamanho padrão de 1em é 16px. */
    /*Tamanho de fonte responsivo
O tamanho do texto pode ser definido com uma vwunidade, o que significa a "largura da janela de visualização".*/

}

/* unvisited link */
a:link{
    

}
a:visited{

}

a:hover{
/*hover DEVE vir depois de um: link e a: visitado*/
}
a:active{
    /*active DEVE vir após a: hover*/
}
input[type=text]:focus {} /*seletor para fazer algo com o campo de entrada quando ele receber o foco:*/

a:link, a:visited {
    background-color: #f44336;
    color: white;
    padding: 14px 25px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
  }
  
  a:hover, a:active {
    background-color: red;
  }


/*LISTAS CSS*/
ul.a {/*seleciona a class*/
    list-style-type: circle;
    list-style-image: url('sqpurple.gif');
}

ul.b {
    list-style-type: square;
    list-style-image: url('sqpurple.gif');
}

ol.c {
    list-style-type: upper-roman;
    list-style-image: url('sqpurple.gif');
}

ol.d {
    list-style-type: lower-alpha;/*none*/
    list-style-image: url('sqpurple.gif');
    list-style-position: outside; /*inside*/
}


/*CSS TABELAS */

/*
border-collapse: collapse;                          propriedade define se as bordas da tabela devem ser reduzidas em uma única borda. coloco no tabble
vertical-align: bottom;
tr:hover {background-color: #f5f5f5;}               :hover seletor em <tr> para destacar as linhas da tabela ao passar o mouse:
tr:nth-child(even) {background-color: #f2f2f2;}     para tabelas listradas de zebra, use o nth-child()seletor e adicione um background-colora todas as linhas da tabela par (ou ímpar)
style="overflow-x:auto;"                            Adicione um elemento de contêiner (como <div>) ao overflow-x:autoredor do elemento <table> para torná-lo responsivo:

*/


p{
    display: block; /*none (esconde), block , inline*/
    /*visibility:hidden; também esconde um elemento.*/
    /*max-width, nessa situação, melhorará o manuseio do navegador de pequenas janelas*/
}


/*POSITION especifica o tipo de método de posicionamento usado para um elemento (static, relative, fixed, absolute or sticky).

- elementos são posicionados usando as propriedades top, bottom, left, and right properties.
- static      está sempre posicionado de acordo com o fluxo normal da página
- relative    está posicionado em relação à sua posição normal
- fixed       é posicionado em relação à janela de visualização, o que significa que ele sempre permanece no mesmo lugar
- absolute     é posicionado em relação ao ancestral posicionado mais próximo (em vez de posicionado em relação à janela de visualização, como fixo). Contudo; se um elemento posicionado de forma absoluta não tiver ancestrais posicionados, ele usará o corpo do documento e se moverá junto com a rolagem da página
- sticky      é posicionado com base na posição de rolagem do usuário.

-  z-index: -1;          z-indexpropriedade especifica a ordem da pilha de um elemento (qual elemento deve ser colocado na frente ou atrás dos outros)

*/

/* OVERFLOW  controla o que acontece com o conteúdo que é muito grande para caber em uma área.

visible- Padrão. O estouro não é cortado. O conteúdo é renderizado fora da caixa do elemento
hidden - O estouro é cortado e o resto do conteúdo ficará invisível
scroll - O estouro é cortado e uma barra de rolagem é adicionada para ver o resto do conteúdo
auto- Semelhante scroll, mas adiciona barras de rolagem apenas quando necessário

overflow-x   e overflow-y   especificam se o excesso de conteúdo deve ser alterado apenas horizontalmente ou verticalmente (ou ambos):

*/


/* FLUTUAÇÃO

A float propriedade CSS especifica como um elemento deve flutuar.             float: right;

A clear propriedade CSS especifica quais elementos podem flutuar ao lado do elemento limpo e em que lado.    clear: left;   


*/


/*
display: inline, a principal diferença é que display: inline-blockpermite definir uma largura e altura no elemento.
*/

/* ALINHAMENTO CENTRALIZADO horizontal

elemento de bloco: margin: auto;

txt   text-align: center;

img display: block;
    margin-left: auto;
    margin-right: auto;




Alinhamento à esquerda e à direita - usando a posição

 position: absolute;
  right: 0px;


Alinhamento à esquerda e à direita - usando flutuação
float: right;



VERTICAL

line-height: 200px;
*/


/*  COMBINADORES

seletor descendente (espaço)      div p {     eleciona todos os elementos <p> dentro dos elementos <div>
seletor filho (>)               div > p {
seletor irmão adjacente (+)             div + p { selecionar um elemento que está diretamente após outro elemento específico.. primeiro elemento <p> que é colocado imediatamente após os elementos <div>
seletor irmão geral (~)        div ~ p {

*/




/*PSEUDO CLASSE

selector:pseudo-class {
  property: value;
}

OS vistos: visited, link, hover, active
a.highlight:hover {
  color: #ff0000;
} 

:first-child       pseudoclasse corresponde a um elemento especificado que é o primeiro filho de outro elemento
p i:first-child {   seletor corresponde ao primeiro elemento <i> em todos os elementos <p>:
p:first-child i {          seletor corresponde a todos os elementos <i> em elementos <p> que são o primeiro filho de outro elemento:



*/


/*PSEUDO ELE,EMTP  -m pseudoelemento CSS é usado para estilizar partes específicas de um elemento.

selector::pseudo-element {
  property: value;
}


p::first-line     adicionar um estilo especial à primeira linha de um texto.
p::first-letter       adicionar um estilo especial à primeira letra de um texto.

>>  adicionar um estilo especial à primeira letra de um texto.   p.intro::first-letter {

>>  Múltiplos pseudo-elementos
Vários pseudo-elementos também podem ser combinados.     p::first-letter {      p::first-line {


::before   pseudoelemento pode ser usado para inserir algum conteúdo antes do conteúdo de um elemento.
h1::before {
  content: url(smiley.gif);
}


::after       pseudoelemento pode ser usado para inserir algum conteúdo após o conteúdo de um elemento.
h1::after {
  content: url(smiley.gif);
}


::markerpseudoelemento seleciona os marcadores dos itens da lista
::marker {
  color: red;
  font-size: 23px;
}

::selectionpseudoelemento corresponde à parte de um elemento que é selecionado por um usuári
::selection {
  color: red;
  background: yellow;
}



*/



/*Opacidade / transparência CSS

  opacity: 0.3;   0-1
  */

  /*
  BARRA DE NAVERGACAO  VERTICAL    -----------------
  ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  width: 200px;
  background-color: #f1f1f1;
}

li a {
  display: block;
  color: #000;
  padding: 8px 16px;
  text-decoration: none;
}

/ Change the link color on hover 
li a:hover {
    background-color: #555;
    color: white;
  }





  HORIZONTAL

  
ul.topnav {
  list-style-type: none;
  margin: 0;
  padding: 0;
  overflow: hidden;
  background-color: #333;
}

ul.topnav li {float: left;}

ul.topnav li a {
  display: block;
  color: white;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
}

ul.topnav li a:hover:not(.active) {background-color: #111;}

ul.topnav li a.active {background-color: #04AA6D;}

ul.topnav li.right {float: right;}

@media screen and (max-width: 600px) {
  ul.topnav li.right, 
  ul.topnav li {float: none;}
}


  */


  /* DROPDOWNS menu suspenso flutuante com CSS

  .dropdown {
  position: relative;
  display: inline-block;
}

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  padding: 12px 16px;
  z-index: 1;
}

.dropdown:hover .dropdown-content {
  display: block;
}

  
  
  */


  /*Sprites de imagem
Um sprite de imagem é uma coleção de imagens colocadas em uma única imagem.*/


/*Seletores de atributos CSS
O [attribute]seletor é usado para selecionar elementos com um atributo especificado*/
a[target]{} /*seleciona todos os elementos <a> com um atributo de destino*/
a[target="_blank"]{} /* seleciona todos os <a> elementos com um atributo target = "_ blank"*/
[title~="flower"]{}  /*seleciona todos os elementos com um atributo de título que contém uma lista de palavras separadas por espaço, uma das quais é "flor"
title = "flower", title = "summer flower" e title = "flower new", mas não title = "my-flower" ou title = "flowers".*/
[class|="top"]{} /*eleciona todos os elementos com um valor de atributo de classe que começa com "top": 
valor deve ser uma palavra inteira, sozinha, como class = "top", ou seguida por um hífen (-), como class = "top-text"*/
[class^="top"]{} /*seleciona todos os elementos com um valor de atributo de classe que começa com "top"
Observação: o valor não precisa ser uma palavra inteira!*/
[class$="test"]{}/*seleciona todos os elementos com um valor de atributo de classe que termina com "test":
Observação: o valor não precisa ser uma palavra inteira!*/
[class*="te"]{}/*eleciona todos os elementos com um valor de atributo de classe que contém "te":
Observação: o valor não precisa ser uma palavra inteira! */
input[type=text]:focus {} /*seletor para fazer algo com o campo de entrada quando ele receber o foco:*/

/*FORM RESPONSIVO E ESTILIZADO -----*/
* {
  box-sizing: border-box;
}

input[type=text], select, textarea {
  width: 100%;
  padding: 12px;
  border: 1px solid #ccc;
  border-radius: 4px;
  resize: vertical;
}

label {
  padding: 12px 12px 12px 0;
  display: inline-block;
}

input[type=submit] {
  background-color: #4CAF50;
  color: white;
  padding: 12px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  float: right;
}

input[type=submit]:hover {
  background-color: #45a049;
}

.container {
  border-radius: 5px;
  background-color: #f2f2f2;
  padding: 20px;
}

.col-25 {
  float: left;
  width: 25%;
  margin-top: 6px;
}

.col-75 {
  float: left;
  width: 75%;
  margin-top: 6px;
}

/* Clear floats after the columns */
.row::after {
  content: "";
  display: table;
  clear: both;
}

/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */
@media screen and (max-width: 600px) {
  .col-25, .col-75, input[type=submit] {
    width: 100%;
    margin-top: 0;
  }
}
/*html
<div class="container">
  <form action="/action_page.php">
    <div class="row">
      <div class="col-25">
        <label for="fname">First Name</label>
      </div>
      <div class="col-75">
        <input type="text" id="fname" name="firstname" placeholder="Your name..">
      </div>
    </div>
    <div class="row">
      <div class="col-25">
        <label for="lname">Last Name</label>
      </div>
      <div class="col-75">
        <input type="text" id="lname" name="lastname" placeholder="Your last name..">
      </div>
    </div>
    <div class="row">
      <div class="col-25">
        <label for="country">Country</label>
      </div>
      <div class="col-75">
        <select id="country" name="country">
          <option value="australia">Australia</option>
          <option value="canada">Canada</option>
          <option value="usa">USA</option>
        </select>
      </div>
    </div>
    <div class="row">
      <div class="col-25">
        <label for="subject">Subject</label>
      </div>
      <div class="col-75">
        <textarea id="subject" name="subject" placeholder="Write something.." style="height:200px"></textarea>
      </div>
    </div>
    <div class="row">
      <input type="submit" value="Submit">
    </div>
  </form>
</div>*/



/*CONTADORES
Os contadores CSS são "variáveis" mantidas por CSS cujos valores podem ser incrementados por regras CSS (para rastrear quantas vezes são usados)*/

body {
  counter-reset: section;
}

h1 {
  counter-reset: subsection;
}

h1::before {
  counter-increment: section;
  content: "Section " counter(section) ". ";
}

h2::before {
  counter-increment: subsection;
  content: counter(section) "." counter(subsection) " ";
}


